# Makefile.Host for medm/medm

TOP = ../../../..
include $(TOP)/config/CONFIG_EXTENSIONS

#
#HOST_OPT = NO
#STATIC_BUILD = YES 
CMPLR = STRICT
#PURIFY = YES

ifeq ($(PURIFY),YES)
CC = purify -first-only -chain-length=25 $(C_$(CMPLR))
#CC = purify -first-only -chain-length=25 -log-file=purelog $(C_$(CMPLR))
#CC = purify -first-only -chain-length=25 -mail-to-user=evans $(C_$(CMPLR))
endif

#USR_LDFLAGS = -L$(INSTALL_LIB) -L$(EPICS_EXTENSIONS_LIB)
#USR_LDLIBS = -lANLwidgets.a -lPrintUtils -lGraphX


ifdef XRTGRAPH
# USR_CFLAGS += -I$(XRTGRAPH)/include/Xm  -D __COLOR_RULE_H__
  USR_CFLAGS += -DXRTGRAPH
  USR_CFLAGS += -I$(XRTGRAPH)/include/Xm
  USR_LDFLAGS += -L$(XRTGRAPH)/lib
  USR_LDLIBS += -lxrtm

#  The following sets up for the XRT/graph 3.0 extensions
ifdef XRTGRAPH_EXTENSIONS
ifeq ($(XRTGRAPH_EXTENSIONS),YES)
  USR_CFLAGS += -DXRT_EXTENSIONS
  USR_LDLIBS += -lxrtmprop -lxrtfield -lxrttable -lxrtgear -lXpm
endif
endif
endif     #ifdef XRTGRAPH

#ifeq ($(PURIFY),YES)
# The following is a workaround for a Purify bug with Solaris libm.a
#else
#endif

ifdef WIN32
# If objects were compiled with different default runtime libraries
#   (not a good idea), specify which one you want to use by making it
#   the default and the others nodefault.
# Currently Exceed is -MD and EPICS is -MDd
ifeq ($(HOST_OPT),NO)
USR_LDFLAGS += /defaultlib:"msvcrtd.lib" #-MDd Multi-thread DLL, Debug
USR_LDFLAGS += /nodefaultlib:"msvcrt.lib"  #-MD  Multi-thread DLL
else
USR_LDFLAGS += /defaultlib:"msvcrt.lib"  #-MD  Multi-thread DLL
USR_LDFLAGS += /nodefaultlib:"msvcrtd.lib" #-MDd Multi-thread DLL, Debug
endif
USR_LDFLAGS += /nodefaultlib:"libcmt.lib"  #-MT  Multi-thread
USR_LDFLAGS += /nodefaultlib:"libcmtd.lib" #-MTd Multi-thread, Debug
USR_LDFLAGS += /nodefaultlib:"libc.lib"    #-ML  Single-thread     
USR_LDFLAGS += /nodefaultlib:"libcd.lib"   #-MLd Single-thread, Debug
endif

USR_CFLAGS += -DEDITRES

ifdef WIN32
#USR_CFLAGS += /D_NTSDK
USR_CFLAGS += /DWIN32 /D_WINDOWS
USR_LDFLAGS += /SUBSYSTEM:WINDOWS
endif


ifdef MEDM_HELP_PATH
   USR_CFLAGS += -DMEDM_HELP_PATH="\"$(MEDM_HELP_PATH)\""
else
   USR_CFLAGS += -DMEDM_HELP_PATH="\"http://www.aps.anl.gov/asd/controls/epics/EpicsDocumentation/ExtensionsManuals/MEDM\""
endif

PROD = medm

USR_INCLUDES = -I../../graphX -I../../xc -I$(MOTIF_INC) -I$(X11_INC)

PROD_LIBS = GraphX ANLwidgets ca Com
USR_LIBS_DEFAULT = Xm Xt X11
ifeq ($(EXCEED),Exceed5)
USR_LIBS_WIN32 = XmStatic Xt XlibGUI Xlib Xmu
else
USR_LIBS_WIN32 = XmStatic HCLXt XlibGUI Xlib HCLXmu
endif

GraphX_DIR = $(INSTALL_LIB)
ANLwidgets_DIR = $(INSTALL_LIB)
ca_DIR = $(EPICS_BASE_LIB)
Com_DIR = $(EPICS_BASE_LIB)
Xm_DIR = $(MOTIF_LIB)
Xt_DIR = $(X11_LIB)
X11_DIR = $(X11_LIB)
Xmu_DIR = $(X11_LIB)
XlibGUI_DIR = $(X11_LIB)
XmStatic_DIR = $(MOTIF_LIB)
HCLXt_DIR = $(X11_LIB)
Xlib_DIR = $(X11_LIB)
HCLXmu_DIR = $(X11_LIB)

SRCS += actions.c
SRCS += bubbleHelp.c 
SRCS += callbacks.c 
SRCS += browserHelp.c 
SRCS += channelPalette.c 
SRCS += colorPalette.c 
SRCS += display.c 
SRCS += dmInit.c 
SRCS += eventHandlers.c 
SRCS += help.c 
SRCS += medm.c 
SRCS += medmArc.c 
SRCS += medmBar.c 
SRCS += medmByte.c 
SRCS += medmCA.c 
ifdef XRTGRAPH
SRCS += medmCartesianPlot.c 
SRCS += medmXrtGraph.c 
endif
SRCS += medmChoiceButtons.c 
SRCS += medmCommon.c 
SRCS += medmComposite.c 
SRCS += medmControl.c 
SRCS += medmImage.c 
SRCS += medmIndicator.c 
SRCS += medmMenu.c 
SRCS += medmMessageButton.c 
SRCS += medmMeter.c 
SRCS += medmMonitor.c 
SRCS += medmOval.c 
SRCS += medmPixmap.c 
SRCS += medmPolygon.c 
SRCS += medmPolyline.c 
SRCS += medmRectangle.c 
SRCS += medmRelatedDisplay.c 
SRCS += medmShellCommand.c 
SRCS += medmStripChart.c 
SRCS += medmText.c 
SRCS += medmTextEntry.c 
SRCS += medmTextUpdate.c 
SRCS += medmValuator.c 
SRCS += medmWidget.c 
SRCS += objectPalette.c 
SRCS += productDescriptionShell.c
SRCS += resourcePalette.c 
SRCS += shared.c 
SRCS += updateMonitors.c 
SRCS += utils.c 
SRCS += xgif.c

RCS_WIN32 += medm.rc
medm.res:../medm.ico

include $(TOP)/config/RULES.Host

ifdef XRTGRAPH
	# --- RUN XRT_AUTH on resulting MEDM for proper authorization
	@-export XRTHOME; XRTHOME=$(XRTGRAPH); $(XRTGRAPH)/bin/xrt_auth medm;\
	if [ $$? -ne 0 ]; then\
		echo "*********************************";\
		echo "ERROR in running XRT_AUTH on MEDM";\
		echo "*********************************";\
	else\
		echo "**************************************************************";\
		echo "License warnings for XRT field, table, and gear may be ignored";\
		echo "Patch successful";\
		echo "**************************************************************";\
	fi
endif

xrtAuth: medm
	# --- RUN XRT_AUTH on resulting MEDM for proper authorization
	@-export XRTHOME; XRTHOME=$(XRTGRAPH); $(XRTGRAPH)/bin/xrt_auth medm;\
	if [ $$? -ne 0 ]; then\
		echo "*********************************";\
		echo "ERROR in running XRT_AUTH on MEDM";\
		echo "*********************************";\
	else\
		echo "**************************************************************";\
		echo "License warnings for XRT field, table, and gear may be ignored";\
		echo "Patch successful";\
		echo "**************************************************************";\
	fi

xxxx:
	@echo ca_DIR: $(ca_DIR)
